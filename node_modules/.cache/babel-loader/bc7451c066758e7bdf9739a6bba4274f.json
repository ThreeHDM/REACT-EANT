{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/_desarrollos/REACT-EANT/src/components/Producto/index.js\";\nimport React from 'react';\nimport { throwStatement } from '@babel/types';\n\nclass Producto extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoaded: false // no est치 cargado. No hay datos\n\n    };\n  }\n\n  componentWillMount() {\n    /*\n    setTimeout(()=>{\n        alert(\"Ya tenemos los datos\")\n        //para actualizar el state se usa un metodo setter \n        this.setState({ isLoaded : true })\n    },10000)\n    */\n    //Petici칩n AJAX que trae datos de API\n    fetch(\"https://api.myjson.com/bins/1giaf3\").then(rta => {\n      let datos = rta.json();\n      datos.then(productos => {\n        console.log(productos);\n        this.setState({\n          nombre: productos[0].nombre,\n          isLoaded: true\n        });\n      });\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    // se re-ejecuta cada vez que se ejecuta primero el setState\n    if (!this.state.isLoaded) {\n      return React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"cite\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Tengo los datos de producto \", this.state.nombre);\n    }\n  }\n\n}\n\nexport default Producto;","map":{"version":3,"sources":["/opt/lampp/htdocs/_desarrollos/REACT-EANT/src/components/Producto/index.js"],"names":["React","throwStatement","Producto","Component","constructor","state","isLoaded","componentWillMount","fetch","then","rta","datos","json","productos","console","log","setState","nombre","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAGA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAGnCC,EAAAA,WAAW,GAAE;AACT;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF,CACQ;;AADR,KAAb;AAGH;;AAGDC,EAAAA,kBAAkB,GAAE;AAEhB;;;;;;;AAQA;AACAC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CAA4CC,IAA5C,CAAiDC,GAAG,IAAG;AAEnD,UAAIC,KAAK,GAAGD,GAAG,CAACE,IAAJ,EAAZ;AAEAD,MAAAA,KAAK,CAACF,IAAN,CAAWI,SAAS,IAAI;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,aAAKG,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAEJ,SAAS,CAAC,CAAD,CAAT,CAAaI,MAAtB;AAA8BX,UAAAA,QAAQ,EAAE;AAAxC,SAAd;AACH,OAJD;AAKH,KATD;AAUH;;AAEDY,EAAAA,iBAAiB,GAAE,CAElB;;AAKDC,EAAAA,MAAM,GAAE;AAAE;AACN,QAAG,CAAC,KAAKd,KAAL,CAAWC,QAAf,EAAwB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAmC,KAAKD,KAAL,CAAWY,MAA9C,CAAP;AACH;AACJ;;AAhDkC;;AAmDvC,eAAef,QAAf","sourcesContent":["import React from 'react';\nimport { throwStatement } from '@babel/types';\n\n\nclass Producto extends React.Component {\n\n    \n    constructor(){\n        super();\n        \n        this.state = {\n            isLoaded : false // no est치 cargado. No hay datos\n        }\n    }\n\n    \n    componentWillMount(){\n        \n        /*\n        setTimeout(()=>{\n            alert(\"Ya tenemos los datos\")\n            //para actualizar el state se usa un metodo setter \n            this.setState({ isLoaded : true })\n        },10000)\n        */ \n    \n        //Petici칩n AJAX que trae datos de API\n        fetch(\"https://api.myjson.com/bins/1giaf3\").then(rta =>{\n    \n            let datos = rta.json()\n\n            datos.then(productos => {\n                console.log(productos);\n            \n                this.setState({nombre: productos[0].nombre, isLoaded: true})\n            })\n        }) \n    }\n\n    componentDidMount(){\n\n    }\n\n    \n    \n    \n    render(){ // se re-ejecuta cada vez que se ejecuta primero el setState\n        if(!this.state.isLoaded){\n            return <em>Loading...</em>;\n        } else {\n            return <cite>Tengo los datos de producto {this.state.nombre}</cite>;\n        }\n    }\n}\n\nexport default Producto;"]},"metadata":{},"sourceType":"module"}