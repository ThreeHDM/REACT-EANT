{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/_desarrollos/REACT-EANT/src/components/Producto/index.js\";\nimport React from 'react';\n\nclass Producto extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoaded: false // no está cargado. No hay datos\n\n    };\n  }\n\n  componentWillMount() {\n    setTimeout(function () {\n      alert(\"Ya tenemos los datos\"); //para actualizar el state se usa un metodo setter \n\n      this.setState({\n        isLoaded: true\n      });\n    }, 10000);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (!this.state.isLoaded) {\n      return React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"cite\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Soy un componente base\");\n    }\n  }\n\n}\n\nexport default Producto;","map":{"version":3,"sources":["/opt/lampp/htdocs/_desarrollos/REACT-EANT/src/components/Producto/index.js"],"names":["React","Producto","Component","constructor","state","isLoaded","componentWillMount","setTimeout","alert","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAGnCC,EAAAA,WAAW,GAAE;AACT;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF,CACQ;;AADR,KAAb;AAGH;;AAGDC,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,UAAU,CAAC,YAAU;AACjBC,MAAAA,KAAK,CAAC,sBAAD,CAAL,CADiB,CAEjB;;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAG;AAAb,OAAd;AACH,KAJS,EAIR,KAJQ,CAAV;AAKH;;AAEDK,EAAAA,iBAAiB,GAAE,CAElB;;AAKDC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKP,KAAL,CAAWC,QAAf,EAAwB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACH;AACJ;;AAjCkC;;AAoCvC,eAAeJ,QAAf","sourcesContent":["import React from 'react';\n\n\nclass Producto extends React.Component {\n\n    \n    constructor(){\n        super();\n        \n        this.state = {\n            isLoaded : false // no está cargado. No hay datos\n        }\n    }\n\n    \n    componentWillMount(){\n        setTimeout(function(){\n            alert(\"Ya tenemos los datos\")\n            //para actualizar el state se usa un metodo setter \n            this.setState({ isLoaded : true })\n        },10000) \n    }\n\n    componentDidMount(){\n\n    }\n\n    \n    \n    \n    render(){\n        if(!this.state.isLoaded){\n            return <em>Loading...</em>;\n        } else {\n            return <cite>Soy un componente base</cite>;\n        }\n    }\n}\n\nexport default Producto;"]},"metadata":{},"sourceType":"module"}